[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "backend"
dynamic = ["version"]
description = "FastAPI backend for fullstack template"
requires-python = ">=3.11"
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "sqlalchemy[asyncio]",
    "asyncpg",
    "alembic",
    "pydantic[email]",
    "pydantic-settings",
    "python-jose[cryptography]",
    "bcrypt>=4.0.0",
    "python-multipart",
    "redis",
    "httpx",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "aiosqlite",
    "python-dotenv",
    "black",
    "ruff",
    "mypy",
    "types-python-jose",
]

[tool.hatch.version]
path = "src/version.py"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
lint.ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = false
disallow_subclassing_any = false
ignore_missing_imports = true
disable_error_code = ["call-arg"]  # Para Settings()

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
addopts = "-v --strict-markers"
markers = [
    "asyncio: mark test as async",
]
